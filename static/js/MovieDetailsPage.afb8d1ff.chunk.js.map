{"version":3,"file":"static/js/MovieDetailsPage.afb8d1ff.chunk.js","mappings":"0OAEaA,EAAMC,EAAAA,EAAAA,IAAH,0CAGHC,EAAQD,EAAAA,EAAAA,IAAH,qEAILE,EAAcF,EAAAA,EAAAA,IAAH,+CCTT,SAASG,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eACjDM,EAAKM,KAAKC,MAAMP,EAAME,GAG7B,OAAOF,E,aCTIQ,EAA2B,WACtC,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCH,EADnC,6DAGFI,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIC,MAAJ,kMAGHN,MAAK,SAAAC,GACJN,GAAS,kBDLF,SAAwBY,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,GACnDA,EAAI,EAAI3B,EAAQL,OAAOmC,IAAS,GAAIC,SAAQ,SAAUtC,GACpD,EAAeiC,EAAQjC,EAAKqC,EAAOrC,OAChCE,OAAOqC,0BAA4BrC,OAAOsC,iBAAiBP,EAAQ/B,OAAOqC,0BAA0BF,IAAW9B,EAAQL,OAAOmC,IAASC,SAAQ,SAAUtC,GAC5JE,OAAOC,eAAe8B,EAAQjC,EAAKE,OAAOa,yBAAyBsB,EAAQrC,OAI/E,OAAOiC,ECLQ,IAAYN,WAExB,CAACL,IACGF,G,SC+BT,MAhDA,WACE,IAAMA,EAAQF,IAEd,OACE,4BACE,UAACxB,EAAD,YACE,0BACE,gBACE+C,IAAG,yCAAoCrB,EAAMsB,aAC7CC,MAAM,QACNC,IAAK,cAGT,UAAC/C,EAAD,YACE,wBAAKuB,EAAMyB,SACX,wCAAgBzB,EAAM0B,iBACtB,sCACA,uBAAI1B,EAAM2B,YACV,oCACA,wBACG3B,EAAM4B,QACL5B,EAAM4B,OAAOC,KAAI,SAAAC,GAAK,OAAI,wBAAoBA,EAAMC,MAAjBD,EAAME,gBAIjD,oDACA,UAACxD,EAAD,YACE,SAAC,KAAD,CAAMyD,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,yBAEF,SAAC,KAAD","sources":["components/MovieDetailsPage/MovieDetailsPage.styles.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","hooks/useFetchMovieDetailsPage.jsx","components/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Div = styled.div`\n  display: flex;\n`;\nexport const Links = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Description = styled.div`\n  padding-left: 20px;\n`;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=a4a29fffc470fecd93a30cf31010c680&language=en-US`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(\n          new Error(`По Вашому запиту нічого не знайдено!`)\n        );\n      })\n      .then(response => {\n        setMovie(() => ({ ...response }));\n      });\n  }, [movieId]);\n  return movie;\n};\n","import React from 'react';\nimport { Outlet, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Div, Links, Description } from './MovieDetailsPage.styles';\nimport { useFetchMovieDetailsPage } from '../../hooks/useFetchMovieDetailsPage';\n\nfunction MovieDetailsPage() {\n  const movie = useFetchMovieDetailsPage();\n\n  return (\n    <div>\n      <Div>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w400${movie.poster_path}`}\n            width=\"250px\"\n            alt={'Poster'}\n          />\n        </div>\n        <Description>\n          <h2>{movie.title}</h2>\n          <p>User score: {movie.vote_average}</p>\n          <h4>Overview</h4>\n          <p>{movie.overview}</p>\n          <h4>Genres</h4>\n          <ul>\n            {movie.genres &&\n              movie.genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n          </ul>\n        </Description>\n      </Div>\n      <h5>Additional information</h5>\n      <Links>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Rewiews</Link>\n      </Links>\n      <Outlet />\n    </div>\n  );\n}\n\nMovieDetailsPage.propTypes = {\n  movie: PropTypes.object,\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    })\n  ),\n};\nexport default MovieDetailsPage;\n"],"names":["Div","styled","Links","Description","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","useFetchMovieDetailsPage","useState","movie","setMovie","movieId","useParams","useEffect","fetch","then","response","ok","json","Promise","reject","Error","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","src","poster_path","width","alt","title","vote_average","overview","genres","map","genre","name","id","to"],"sourceRoot":""}