{"version":3,"file":"static/js/HomePage.3b68d4bd.chunk.js","mappings":"oOA2BA,MAtBA,WACE,IAAMA,ECJwB,WAC9B,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOD,EAAP,KAAeE,EAAf,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,0FAGHC,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIC,MAAJ,kMAGHN,MAAK,SAAAC,GACJ,IAAMM,EAAON,EAASO,QAAQC,KAAI,kBAA0B,CAC1DC,MADgC,EAAGA,MAEnCC,GAFgC,EAAUA,GAG1CC,KAHgC,EAAcA,SAKhDf,GAAU,yBAAUU,WAEvB,IAEIZ,EDrBQkB,GAEf,OACE,iCACE,2CAEClB,IACC,wBACGA,EAAOc,KAAI,gBAAEE,EAAF,EAAEA,GAAID,EAAN,EAAMA,MAAOE,EAAb,EAAaA,KAAb,OACV,yBACE,SAAC,KAAD,CAAME,GAAE,iBAAYH,EAAZ,KAAR,SACGD,GAAgBE,KAFZD,a,8EEXN,SAASI,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["pages/HomePage/HomePage.js","hooks/useFetchHomePage.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {useFetchHomePage } from '../../hooks/useFetchHomePage'\n\n\nfunction HomePage() {\n  const movies = useFetchHomePage();\n\n  return (\n    <>\n      <h2>Trending today</h2>\n\n      {movies && (\n        <ul>\n          {movies.map(({id, title, name}) => (\n            <li key={id}>\n              <Link to={`movies/${id}'`}>\n                {title ? title : name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default HomePage;\n","import { useState, useEffect } from 'react';\n\nexport const useFetchHomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=a4a29fffc470fecd93a30cf31010c680`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(\n          new Error(`По Вашому запиту нічого не знайдено!`)\n        );\n      })\n      .then(response => {\n        const hits = response.results.map(({ title, id, name }) => ({\n          title,\n          id,\n          name,\n        }));\n        setMovies(() => [...hits]);\n      });\n  }, []);\n\n  return movies;\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["movies","useState","setMovies","useEffect","fetch","then","response","ok","json","Promise","reject","Error","hits","results","map","title","id","name","useFetchHomePage","to","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}