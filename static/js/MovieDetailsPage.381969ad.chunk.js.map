{"version":3,"file":"static/js/MovieDetailsPage.381969ad.chunk.js","mappings":"uPAGaA,EAAMC,EAAAA,EAAAA,IAAH,0CAGHC,EAAQD,EAAAA,EAAAA,IAAH,qEAILE,EAAcF,EAAAA,EAAAA,IAAH,+CAGXG,EAAMH,EAAAA,EAAAA,OAAH,wHAMHI,GAAQJ,EAAAA,EAAAA,GAAOK,EAAAA,IAAPL,CAAH,mE,2BCdH,SAASM,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,ECJsC,WACtC,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCH,EADnC,6DAGFI,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIC,MAAJ,kMAGHN,MAAK,YAA6D,IAA1DO,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACjDhB,GAAS,4BACJ,CAAEY,MAAAA,EAAOC,OAAAA,EAAQC,aAAAA,EAAcC,YAAAA,EAAaC,SAAAA,YAGpD,CAACf,IACGF,EDjBLkB,GADML,EAAR,EAAQA,MAAOE,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,YAAaC,EAA1C,EAA0CA,SAAUH,EAApD,EAAoDA,OAWpD,OACE,4BACE,UAACzB,EAAD,YACE,4BACE,UAACI,EAAD,CAAK0B,KAAK,SAASC,QAZV,WACXC,OAAOC,QAAQC,OAASF,OAAOC,QAAQC,MAAMC,IAAM,EACrD3B,GAAU,GAEVA,EAAS,IAAK,CAAC4B,SAAS,KAQpB,WACE,SAAC/B,EAAD,IADF,eAGA,gBACEgC,IAAG,yCAAoCV,GACvCW,MAAM,QACNC,IAAK,eAGT,UAACpC,EAAD,YACE,wBAAKqB,KACL,wCAAgBE,MAChB,sCACA,uBAAIE,KACJ,oCACA,wBACGH,GAAUA,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,eAIvD,oDACA,UAACvC,EAAD,YACE,SAAC,KAAD,CAAMyC,GAAG,OAAT,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,yBAEF,SAAC,KAAD","sources":["pages/MovieDetailsPage/MovieDetailsPage.styles.jsx","pages/MovieDetailsPage/MovieDetailsPage.js","hooks/useFetchMovieDetailsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {BsArrowLeft} from \"react-icons/bs\";\n\nexport const Div = styled.div`\n  display: flex;\n`;\nexport const Links = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Description = styled.div`\n  padding-left: 20px;\n`;\nexport const Btn = styled.button`\n  margin-bottom: 10px;\n  background-color: white;\n  display: flex;\n  align-items: baseline;\n`\nexport const Arrow = styled(BsArrowLeft)`\n  margin-right: 10px;\n  margin-top: 2px;\n`\n","import React from 'react';\nimport { Outlet, Link, useNavigate } from 'react-router-dom';\nimport { Div, Links, Description, Btn, Arrow } from './MovieDetailsPage.styles';\nimport { useFetchMovieDetailsPage } from '../../hooks/useFetchMovieDetailsPage';\n\nexport default function MovieDetailsPage() {\n  const navigate = useNavigate();\n  const { title, vote_average, poster_path, overview, genres } =\n    useFetchMovieDetailsPage();\n \n  const onGoBack = () => {\n    if (window.history.state && window.history.state.idx > 0) {\n      navigate(-1);\n    }else{\n      navigate(\"/\", {replace: true})\n    }\n  };\n\n  return (\n    <div>\n      <Div>\n        <div>\n          <Btn type=\"button\" onClick={onGoBack}>\n            <Arrow /> Go back\n          </Btn>\n          <img\n            src={`https://image.tmdb.org/t/p/w400${poster_path}`}\n            width=\"250px\"\n            alt={'Poster'}\n          />\n        </div>\n        <Description>\n          <h2>{title}</h2>\n          <p>User score: {vote_average}</p>\n          <h4>Overview</h4>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <ul>\n            {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n          </ul>\n        </Description>\n      </Div>\n      <h5>Additional information</h5>\n      <Links>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Rewiews</Link>\n      </Links>\n      <Outlet />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchMovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=a4a29fffc470fecd93a30cf31010c680&language=en-US`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(\n          new Error(`По Вашому запиту нічого не знайдено!`)\n        );\n      })\n      .then(({ title, genres, vote_average, poster_path, overview }) => {\n        setMovie(() => ({\n          ...{ title, genres, vote_average, poster_path, overview },\n        }));\n      });\n  }, [movieId]);\n  return movie;\n};\n"],"names":["Div","styled","Links","Description","Btn","Arrow","BsArrowLeft","MovieDetailsPage","navigate","useNavigate","useState","movie","setMovie","movieId","useParams","useEffect","fetch","then","response","ok","json","Promise","reject","Error","title","genres","vote_average","poster_path","overview","useFetchMovieDetailsPage","type","onClick","window","history","state","idx","replace","src","width","alt","map","id","name","to"],"sourceRoot":""}