{"version":3,"file":"static/js/Reviews.bb240c6c.chunk.js","mappings":"2MAEaA,E,OAAKC,EAAAA,GAAH,gD,oCC8Bf,MA3BA,WACE,IAAMC,ECHkB,WACxB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOD,EAAP,KAAgBE,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCH,EADnC,4EAGFI,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OACb,IAAIC,MAAJ,kMAGHN,MAAK,SAAAC,GACJN,GAAW,yBAAUM,EAASM,iBAEjC,CAACX,IAEGH,EDlBSe,GAEhB,OACE,2BACGf,GACCA,EAAQgB,KAAI,SAAAC,GAAM,OAChB,UAACnB,EAAD,YACE,qCAAamB,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,OAKA,IAAnBpB,EAAQqB,SAAgB,0D,8EEbhB,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","hooks/useReviews.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Li = styled.li`\nlist-style-type: none;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Li} from './Reviews.styled'\nimport {useReviews} from '../../hooks/useReviews'\n\nfunction Reviews() {\n  const reviews = useReviews();\n  \n  return (\n    <div>\n      {reviews &&\n        reviews.map(review => (\n          <Li key={review.id}>\n            <h4>Author: {review.author}</h4>\n            <p>{review.content}</p>\n          </Li>\n        ))}\n      {reviews.length === 0 && <p>We don't have any reviews</p>}\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useReviews = () => {\n  const [reviews, setRevievs] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=a4a29fffc470fecd93a30cf31010c680&language=en-US&page=1`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(\n          new Error(`По Вашому запиту нічого не знайдено!`)\n        );\n      })\n      .then(response => {\n        setRevievs(() => [...response.results]);\n      });\n  }, [movieId]);\n\n  return reviews;\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Li","styled","reviews","useState","setRevievs","movieId","useParams","useEffect","fetch","then","response","ok","json","Promise","reject","Error","results","useReviews","map","review","author","content","id","length","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}